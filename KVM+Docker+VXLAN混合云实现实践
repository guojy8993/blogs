1.系统整体架构
https://github.com/guojy8993/blogs/blob/master/kvm%E4%B8%8Edocker%E6%B7%B7%E5%90%88%E4%BA%91.png

2.系统部件说明
## Provider网络的初始化 ##
(1)创建privider网络的网桥
[root@docker-net127 ~]# brctl addbr public-bridge
[root@docker-net127 ~]# brctl stp public-bridge off
[root@docker-net127 ~]# brctl sefd public-bridge 0
[root@docker-net127 ~]# ip link set public-bridge mtu 1500 up

(2)连接provider网桥到宿主provider网络网卡(ens192) 
[root@docker-net127 ~]# brctl addif public-bridge ens192
[root@docker-net127 ~]# ip link set ens192 up

(3)创建provider网络的dhcp服务,创建ip资源池
[root@docker-net127 ~]# ip link add pub-dhcp-out type veth peer name pub-dhcp-in
[root@docker-net127 ~]# brctl addif public-bridge pub-dhcp-out
[root@docker-net127 ~]# ip netns add public-dhcp
[root@docker-net127 ~]# ip link set pub-dhcp-in netns public-dhcp
[root@docker-net127 ~]# ip netns exec public-dhcp ip link set lo up
[root@docker-net127 ~]# ip netns exec public-dhcp ip link set lo state up
[root@docker-net127 ~]# ip netns exec public-dhcp ip link set pub-dhcp-in mtu 1500 up
[root@docker-net127 ~]# ip link set pub-dhcp-out mtu 1500 up
[root@docker-net127 ~]# ip netns exec public-dhcp ip addr add dev pub-dhcp-in 200.160.0.2/24
[root@docker-net127 ~]# ip netns exec public-dhcp ip route add default via 200.160.0.1 dev pub-dhcp-in
[root@docker-net127 ~]# ip netns exec public-dhcp ping -c 1 200.160.0.1
[root@docker-net127 ~]# uuidgen
81758417-bf10-4cb0-af2f-5d3a0c76c792
[root@docker-net127 ~]# mkdir -p /tmp/dhcp/81758417-bf10-4cb0-af2f-5d3a0c76c792/
[root@docker-net127 ~]# ip netns exec public-dhcp dnsmasq --no-hosts \
                   --no-resolv --strict-order --except-interface=lo --pid-file=/tmp/dhcp/81758417-bf10-4cb0-af2f-5d3a0c76c792/pid \
                   --dhcp-hostsfile=/tmp/dhcp/81758417-bf10-4cb0-af2f-5d3a0c76c792/host \
                   --addn-hosts=/tmp/dhcp/81758417-bf10-4cb0-af2f-5d3a0c76c792/addn_hosts \
                   --dhcp-optsfile=/tmp/dhcp/81758417-bf10-4cb0-af2f-5d3a0c76c792/opts \
                   --dhcp-leasefile=/tmp/dhcp/81758417-bf10-4cb0-af2f-5d3a0c76c792/leases \
                   --dhcp-match=set:ipxe,175 --bind-interfaces --interface=pub-dhcp-in \
                   --dhcp-range=set:tag0,200.160.0.0,static,86400s \
                   --dhcp-option-force=option:mtu,1500 \
                   --dhcp-lease-max=256 \
                   --conf-file= \
                   --domain=provider-dhcp


##  租户网络的初始化 ##
(1)创建租户网络的网桥
[root@docker-net127 ~]# brctl addbr private-bridge
[root@docker-net127 ~]# brctl stp private-bridge off
[root@docker-net127 ~]# brctl setfd private-bridge 0
[root@docker-net127 ~]# ip link set private-bridge mtu 1450 up

(2)创建租户网络的dhcp服务,创建ip资源池
[root@docker-net127 ~]# ip netns add private-dhcp
[root@docker-net127 ~]# ip link add name ss-dhcp-out type veth peer name ss-dhcp-in
[root@docker-net127 ~]# brctl addif private-bridge ss-dhcp-in
[root@docker-net127 ~]# ip link set ss-dhcp-out mtu 1450 up
[root@docker-net127 ~]# ip link set ss-dhcp-in netns private-dhcp
[root@docker-net127 ~]# ip netns exec private-dhcp ip link set lo up
[root@docker-net127 ~]# ip netns exec private-dhcp ip link set lo state up 
[root@docker-net127 ~]# ip netns exec private-dhcp ip link set ss-dhcp-in mtu 1450 up
[root@docker-net127 ~]# ip netns exec private-dhcp ip addr add dev ss-dhcp-in 192.168.100.2/24

[root@docker-net127 ~]# uuidgen
bd406409-135e-44b1-a4ed-f4d6365118fb
[root@docker-net127 ~]# mkdir -p /tmp/dhcp/bd406409-135e-44b1-a4ed-f4d6365118fb/
[root@docker-net127 ~]# ip netns exec private-dhcp dnsmasq --no-hosts \
                   --no-resolv --strict-order --except-interface=lo --pid-file=/tmp/dhcp/bd406409-135e-44b1-a4ed-f4d6365118fb/pid \
                   --dhcp-hostsfile=/tmp/bd406409-135e-44b1-a4ed-f4d6365118fb/host \
                   --addn-hosts=/tmp/dhcp/bd406409-135e-44b1-a4ed-f4d6365118fb/addn_hosts \
                   --dhcp-optsfile=/tmp/dhcp/bd406409-135e-44b1-a4ed-f4d6365118fb/opts \
                   --dhcp-leasefile=/tmp/dhcp/bd406409-135e-44b1-a4ed-f4d6365118fb/leases \
                   --dhcp-match=set:ipxe,175 --bind-interfaces --interface=ss-dhcp-in \
                   --dhcp-range=set:tag0,192.168.100.0,static,86400s \
                   --dhcp-option-force=option:mtu,1450 \
                   --dhcp-lease-max=256 \
                   --conf-file= \
                   --domain=ss-dhcp

(3)创建租户的私有路由,并连接到租户内网
[root@docker-net127 ~]# ip netns add private-router
[root@docker-net127 ~]# ip netns exec private-router ip link set lo up
[root@docker-net127 ~]# ip netns exec private-router ip link set lo state up
[root@docker-net127 ~]# ip link add ss-rt-out type veth peer name ss-rt-in
[root@docker-net127 ~]# ip link set ss-rt-in netns private-router
[root@docker-net127 ~]# ip netns exec private-router ip link set ss-rt-in mtu 1450 up
[root@docker-net127 ~]# ip link set ss-rt-out mtu 1450 up
[root@docker-net127 ~]# brctl addif private-bridge ss-rt-out
[root@docker-net127 ~]# ip netns exec private-router ip addr add dev ss-rt-in 192.168.100.1/24
[root@docker-net127 ~]# ip netns exec private-router sysctl -w net.ipv4.ip_forward=1

(4)连接私有路由到provider网络(设置路由网关)
[root@docker-net127 ~]# ip link add name ss-router-out type veth peer name ss-router-gw
[root@docker-net127 ~]# ip link set ss-router-gw netns private-router
[root@docker-net127 ~]# ip netns exec private-router ip link set ss-router-gw up
[root@docker-net127 ~]# ip netns exec private-router ip link set ss-router-gw mtu 1500 state up
[root@docker-net127 ~]# ip link set ss-router-out mtu 1500 up
[root@docker-net127 ~]# brctl addif public-bridge ss-router-out
[root@docker-net127 ~]# ip netns exec private-router ip addr add dev ss-router-gw 200.160.0.3/24 broadcast 200.160.0.255
[root@docker-net127 ~]# ip netns exec private-router ip route add default via 200.160.0.1 dev ss-router-gw
[root@docker-net127 ~]# ip netns exec private-router ping -c 1 200.160.0.1

(5)根据租户分配的vxlan网络,在网络节点上创建对应vtep(vxlan网络端点)设备,以内网网络传输隧道数据
# VXLan网络VNI - 此处以100为例
# 网络节点 - docker-net127
# 宿主内网网络设备(ens160,vlan610) - ens160.610
# 关闭防火墙/SELINUX允许后续vtep通信
[root@docker-net127 ~]# ip link add vxlan-100 type vxlan id 100 dstport 0 dev ens160.610
[root@docker-net127 ~]# brctl addif private-bridge vxlan-100







## 为租户某web服务器绑定浮动ip(200.160.0.4) -图(5) - Fip ##
(1)添加租户内网ip与浮动ip的nat映射
[root@docker-net127 ~]# ip netns exec private-router ip addr add 200.160.0.4/32 broadcast 200.160.0.4  dev ss-router-gw
[root@docker-net127 ~]# ip netns exec private-router iptables -t nat -A PREROUTING -d 200.160.0.4 -j DNAT --to-destination 192.168.100.6
[root@docker-net127 ~]# ip netns exec private-router iptables -t nat -A OUTPUT -d 200.160.0.4 -j DNAT --to-destination 192.168.100.6
[root@docker-net127 ~]# ip netns exec private-router iptables -t nat -A POSTROUTING -s 192.168.100.6 -j SNAT --to-source 200.160.0.4

(2)公网测试web服务以及ssh可用性
[root@net ~]# curl 200.160.0.4:9898
This Page is got from server 192.168.100.6(nat to 200.160.0.4)
[root@net ~]# ssh root@200.160.0.4
root@200.160.0.4's password: 
Last login: Sun Nov 20 16:47:51 2016 from 200.160.0.1
[root@localhost ~]#

## 负载均衡即服务设置 - 图(18) ##
(1)添加负载均衡前端ip与设备
[root@docker-net127 ~]# ip link add name ha-if type veth peer name ha-out
[root@docker-net127 ~]# ip link set ha-if mtu 1450
[root@docker-net127 ~]# brctl addif private-bridge ha-out
[root@docker-net127 ~]# ip netns add ha-vxlan100-web
[root@docker-net127 ~]# ip link set ha-if netns ha-vxlan100-web
[root@docker-net127 ~]# ip netns exec ha-vxlan100-web ip link set lo up
[root@docker-net127 ~]# ip link set ha-out mtu 1450 up
[root@docker-net127 ~]# ip netns exec ha-vxlan100-web ip addr add dev ha-if 192.168.100.8/24
[root@docker-net127 ~]# ip netns exec ha-vxlan100-web ip route add default via 192.168.100.1 dev ha-if

(2)在vxlan网络(某租户网络)内启动负载均衡服务
[root@docker-net127 ~]# mkdir -p /var/lib/netns/ha-vxlan100-web/
[root@docker-net127 ~]# cat > /var/lib/netns/ha-vxlan100-web/haproxy.cfg << EOF
global
   daemon
   user nobody
   group haproxy
   log /dev/log local0
   log /dev/log local1 notice
defaults
   log global
   retries 3
   option redispatch
   timeout connect 5000
   timeout client 50000
   timeout server 50000
frontend c4c49fc1-bf10-4270-bc20-02b93439897f
   option tcplog
   bind 192.168.100.8:80
   mode http
   default_backend 8f09dbaf-0c78-48f1-8b80-662e75036485
   maxconn 100
   option forwardfor
backend 8f09dbaf-0c78-48f1-8b80-662e75036485
   mode http
   balance leastconn
   option forwardfor
   server 0c7d3741-df7b-4bf3-9396-14cc3c05b5a5 192.168.100.6:9898 weight 100
   server 44c18162-301e-42f3-9f0a-5522f426412f 192.168.100.7:9898 weight 100
EOF

[root@docker-net127 ~]# ip netns exec ha-vxlan100-web haproxy -f /var/lib/netns/ha-vxlan100-web/haproxy.cfg

(3)租户内网测试负载均衡服务
[root@docker-net127 ~]# ip netns exec private-router curl 192.168.100.8
This Page is got from server 192.168.100.6(nat to 200.160.0.4)
[root@docker-net127 ~]# ip netns exec private-router curl 192.168.100.8
This page is got from 192.168.100.7

(4)为负载均衡前端ip绑定浮动ip(200.160.0.5),对公网提供服务
[root@docker-net127 ~]# ip netns exec private-router ip addr add 200.160.0.5/32 broadcast 200.160.0.5  dev ss-router-gw
[root@docker-net127 ~]# ip netns exec private-router iptables -t nat -A PREROUTING -d 200.160.0.5 -j DNAT --to-destination 192.168.100.8
[root@docker-net127 ~]# ip netns exec private-router iptables -t nat -A OUTPUT -d 200.160.0.5 -j DNAT --to-destination 192.168.100.8
[root@docker-net127 ~]# ip netns exec private-router iptables -t nat -A POSTROUTING -s 192.168.100.8 -j SNAT --to-source 200.160.0.5

(5)公网测试负载均衡服务
[root@net ~]# curl 200.160.0.5
This Page is got from server 192.168.100.6(nat to 200.160.0.4)
[root@net ~]# curl 200.160.0.5
This page is got from 192.168.100.7
