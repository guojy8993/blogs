### 基础环境配置 ###
第0部分:  开始前的准备
第1部分:  网络
第2部分:  NTP服务
第3部分:  安全
第4部分:  数据库
第5部分:  Openstack包
第6部分:  消息队列服务器

################################################ NO.0 开始前的准备 ##########################################################
理论部分:
作为功能型的环境,OpenStack并不需要大量的资源。官方说明的最低配置:
Controller    1 processor  2 GB memory    and 5 GB storage
Network       1 processor  512 MB memory  and 5 GB storage
Compute       1 processor  2 GB memory    and 10 GB storage
为降低混乱以及提供更多资源，广泛推荐Linux系统最小化安装。同时,建议使用64bit版本。特别是计算节点，一旦出现32bit宿主启动64bit
客户机会报错。
注意:出于安装Glance/Cinder块存储服务的考虑，需要合理规划磁盘分区。
又注意: 如果使用的是虚拟宿主，确保hypervisor支持外网标签的混杂模式。

实践部分:
创建3台wmware虚拟机机器,做测试环境,硬件配置如下:
机器名/角色      系统          CPU(个)  内存(M)   硬盘(G)    网卡       
----------------------------------------------------------------------------------------------------------------------------
Controller    CentOS7-X86_64   4        4096      100     ens160      internal-net  
                                                          ens160.610  (vlan)           10.160.0.116    # 管理网络
----------------------------------------------------------------------------------------------------------------------------
Network       CentOS7-X86_64   4        4096      100     ens160      internal-net                     
                                                          ens160.610  (vlan)           10.160.0.149    # 管理网络
                                                          ens192      internal-net                     # 外网(打vlan,不配置ip)
                                                          ens224      data-net01       172.172.172.149 # 隧道网络
----------------------------------------------------------------------------------------------------------------------------
Compute       CentOS7-X86_64   16       16*1024   100     ens160      internal-net
                                                          ens160.610  (vlan)           10.160.0.117    # 管理网络
                                                          ens192      data-net01       172.172.172.117 # 隧道网络
# 注意:鉴于工作环境,虚拟宿主外网网络与管理网络均使用internal-net，
#      而隧道网络使用data-net01标签,后期的存储集群使用 data-net02标签.

设置网络:
(1)主控节点:
[root@localhost ~]# nmcli c add con-name ens160.610 type vlan id 610 dev ens160 ip4 10.160.0.116/16 gw4 10.160.0.1
(2)网络节点:
[root@localhost ~]# nmcli c add con-name ens160.610 type vlan id 610 dev ens160 ip4 10.160.0.149/16 gw4 10.160.0.1
# 配置隧道网络ip
[root@localhost ~]# sed -ri "s/(BOOTPROTO=).*/\1static/" /etc/sysconfig/network-scripts/ifcfg-ens224
[root@localhost ~]# sed -ri "s/(ONBOOT=).*/\1yes/"       /etc/sysconfig/network-scripts/ifcfg-ens224
[root@localhost ~]# echo "IPADDR=172.172.172.149" >> /etc/sysconfig/network-scripts/ifcfg-ens224
[root@localhost ~]# echo "PREFIX=24"              >> /etc/sysconfig/network-scripts/ifcfg-ens224
[root@localhost ~]# service network restart
# 只打vlan不设ip
[root@localhost ~]# ip link add link ens192 name ens192.610 type vlan id 610 up
(3)计算节点:
[root@localhost ~]# nmcli c add con-name ens160.610 type vlan id 610 dev ens160 ip4 10.160.0.117/16 gw4 10.160.0.1
# 配置隧道网络ip
[root@localhost ~]# sed -ri "s/(BOOTPROTO=).*/\1static/" /etc/sysconfig/network-scripts/ifcfg-ens192
[root@localhost ~]# sed -ri "s/(ONBOOT=).*/\1yes/"       /etc/sysconfig/network-scripts/ifcfg-ens192
[root@localhost ~]# echo "IPADDR=172.172.172.117" >> /etc/sysconfig/network-scripts/ifcfg-ens192
[root@localhost ~]# echo "PREFIX=24" >> /etc/sysconfig/network-scripts/ifcfg-ens192
[root@localhost ~]# service network restart
各自设置yum代理:
[root@localhost ~]# echo "proxy=http://10.120.45.67:3128" >> /etc/yum.conf
各自设置hostname:
(1)主控节点:
[root@localhost ~]# echo "controller" >> /etc/hostname
(2)网络节点:
[root@localhost ~]# echo "network" >> /etc/hostname
(3)计算节点:
[root@localhost ~]# echo "compute" >> /etc/hostname

################################################ NO.1 网络         ##########################################################
理论部分:
各个节点安装完操作系统后,需要配置网卡;建议disable任何自启的网络管理工具,根据系统手工配置ip;
使用如下命令禁用NetworkManager,启用network.service:
# service NetworkManager stop
# service network start
# chkconfig NetworkManager off
# chkconfig network on

!! 特别注意 !! CentOS以及某些特定版本默认使用严格的防火墙.在安装过程中,某些步骤会因为防火墙问题导致安装失败
禁用firewalld,使用iptables作为默认防火墙系统:
# service firewalld stop
# service iptables start
# chkconfig firewalld off
# chkconfig iptables on

实践部分:
[root@localhost ~]# cat > network_setting  << EOF
#! /bin/bash
systemctl enable NetworkManager
systemctl start NetworkManager
systemctl stop firewalld
systemctl disable firewalld
EOF

# 注意虽然推荐禁用NetworkManager,但是实际情况下宿主的管理网络ip皆nmcli工具
# 配置,一旦禁用之,网卡配置失效,此处饶过它!
# centos7下提供了好用的服务管理工具 systemctl !

################################################ NO.2 NTP服务      ##########################################################
理论部分:
为了跨机器进行服务同步,你需要安装NTP.在本例中将controller节点作为ntp校时服务器,其他节点参考controller节点对时;
在各个运行openstack服务的机器上,安装ntp包:
# yum install ntp
在主控节点上通过修改 ntp.conf,重启ntp服务,以提供校时服务;
# service ntpd start
# chkconfig ntpd on
建议修改其余节点从主控节点同步时间,而不是从外部网络同步；同上安装ntp服务,修改配置,使用主控节点作为网络时间源;

实践部分:
[root@localhost ~]# cat > ntp_clients_setting << EOF
#!/bin/bash
# 使用公司内部既有时间服务器
InternetTimeServer="10.120.11.11"
# 修改时区
rm -rf /etc/localtime
ln -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
# 安装ntp服务
yum install ntp.x86_64 ntpdate.x86_64 -y
cp /etc/ntp.conf /etc/ntp.conf.backup
# 修ntp服务配置文件的time server为InternetTimeServer 
sed -ri "s/(server ).*/server ${InternetTimeServer}/" /etc/ntp.conf
# 重启 ntp服务
systemctl enable ntpd
systemctl restart ntpd
EOF

################################################ NO.3 安全         ##########################################################
理论部分:
OpenStack服务支持各种安全方法,包括密码,策略,加密.另外,支持性的服务(包括数据库服务器,消息队列)都支持"密码安全"方法;
为了简化安装过程,该指导文档仅演示密码安全的应用;你可以通过密码生成工具,e.g:pwgen,手动创建安全密码,命令行如下:
$ openssl rand -hex 10
针对OpenStack服务,本手册使用SERVICE_PASS指代service帐号的密码,而SERVICE_DBPASS指代数据库的密码;
下面是需要密码的服务一览表:
PASSWD Name                            Description
----------------------------------------------------------------------------------------
Database password (no variable used)   Root password for the database
RABBIT_PASS                            Password of user guest of RabbitMQ
KEYSTONE_DBPASS                        Database password of Identity service
DEMO_PASS                              Password of user demo
ADMIN_PASS                             Password of user admin
GLANCE_DBPASS                          Database password for Image Service
GLANCE_PASS                            Password of Image Service user glance
NOVA_DBPASS                            Database password for Compute service
NOVA_PASS                              Password of Compute service user nova
DASH_DBPASS                            Database password for the dashboard
CINDER_DBPASS                          Database password for the Block Storage service
CINDER_PASS                            Password of Block Storage service user cinder
NEUTRON_DBPASS                         Database password for the Networking service
NEUTRON_PASS                           Password of Networking service user neutron
HEAT_DBPASS                            Database password for the Orchestration service
HEAT_PASS                              Password of Orchestration service user heat
CEILOMETER_DBPASS                      Database password for the Telemetry service
CEILOMETER_PASS                        Password of Telemetry service user ceilometer
TROVE_DBPASS                           Database password of Database service
TROVE_PASS                             Password of Database Service user trove
----------------------------------------------------------------------------------------
因为 OpenStack 以及支持性的服务在安装、操作过程中或许会需要管理权限;

实践部分:
使用openssl生成20个密码,供后续部署服务时使用:
[root@localhost ~]# for i in {0..19};do openssl rand -hex 10 >> passwords;done
[root@localhost ~]# cat passwords
76e8ea91e09ee96ea847
3416e5df6efd63a83b2d
c82dcdeb6a0bd79b7254
58a0cc5a2fb248027398
25bbc1c058255215930c
fd659cbfdc98a28bed5b
f79719d688c353d0703c
b3445b99fa075d43a7aa
a078669d817403330c67
b5c153284fc7885010ac
0275aa48b1e0a313bced
8430e3bff4d000a04085
597a6caadd8ef75a7745
c088217738b0a8c913f3
d65c077ed7332d8aa238
22eb630cad4785bfdc81
f9b101949a581ac12dfe
a02a2a42a9af59b74712
1428101ae612a0110bb9
623a6cccdd8af75a7645
密码分配如下:
PASSWD Name                            Value
----------------------------------------------------------------------------------------
Database password (no variable used)   1428101ae612a0110bb9
RABBIT_PASS                            a02a2a42a9af59b74712
KEYSTONE_DBPASS                        f9b101949a581ac12dfe
DEMO_PASS                              22eb630cad4785bfdc81
ADMIN_PASS                             d65c077ed7332d8aa238
GLANCE_DBPASS                          c088217738b0a8c913f3
GLANCE_PASS                            597a6caadd8ef75a7745
NOVA_DBPASS                            8430e3bff4d000a04085
NOVA_PASS                              0275aa48b1e0a313bced
DASH_DBPASS                            b5c153284fc7885010ac
CINDER_DBPASS                          a078669d817403330c67
CINDER_PASS                            b3445b99fa075d43a7aa
NEUTRON_DBPASS                         f79719d688c353d0703c
NEUTRON_PASS                           fd659cbfdc98a28bed5b
HEAT_DBPASS                            25bbc1c058255215930c
HEAT_PASS                              58a0cc5a2fb248027398
CEILOMETER_DBPASS                      c82dcdeb6a0bd79b7254
CEILOMETER_PASS                        76e8ea91e09ee96ea847
TROVE_DBPASS                           3416e5df6efd63a83b2d
TROVE_PASS                             623a6cccdd8af75a7645
----------------------------------------------------------------------------------------

################################################ NO.4 数据库       ##########################################################
理论部分:
在主控节点,安装mysql客户端与服务端程序,以及mysql的python连接库:
# yum install mysql mysql-server MySQL-python
如果mysql想要良好服务openstack各种服务,那么它还需要进行一些配置,编辑/etc/my.cnf:
(1) 在[mysqld]区域,把bind-address的值设置当前主控节点的(管理网络)ip,以允许其他节点通过管理网络连接;
[mysqld]
...
bind-address = 10.0.0.11
(2) 同样在[mysqld]区域,设置允许InnoDB,utf8默认字符集;
[mysqld]
...
default-storage-engine = innodb
innodb_file_per_table
collation-server = utf8_general_ci
init-connect = 'SET NAMES utf8'
character-set-server = utf8
(3) 启动mysql服务端程序,并设置其为开机自启:
# service mysqld start
# chkconfig mysqld on

(4)最后,需要为数据库设置root密码;Openstack那些建立数据库与表的服务会提示输入密码;
特别注意:删除任何数据库建立之初创建的匿名用户;
# mysql_install_db
# mysql_secure_installation
当你尚未设置数据库root密码情况下,如果被提示输入密码，你点击回车键即可;该命令代表一系列的保证数据库安全安装的选项;对所有提示
回复YES，除非你有好的理由不那样做.

在其余诸节点上仅安装mysql的python连接类库即可:
# yum install MySQL-python

实践部分:
[root@localhost ~]# yum install MySQL-python mariadb* -y
# 修改配置 /etc/my.cnf: 在 [mysqld] 下添加:
# bind-address=10.160.0.116
# default-storage-engine=innodb
# innodb_file_per_table
# collation-server=utf8_general_ci
# init-connect='SET NAMES utf8'
# character-set-server=utf8
# ...
[root@localhost ~]# systemctl start mariadb.service
[root@localhost ~]# systemctl enable  mariadb.service
ln -s '/usr/lib/systemd/system/mariadb.service' '/etc/systemd/system/multi-user.target.wants/mariadb.service'
[root@localhost ~]# systemctl status  mariadb.service
[root@localhost ~]# mysql
Welcome to the MariaDB monitor.  Commands end with ; or \g.
Your MariaDB connection id is 3
Server version: 5.5.47-MariaDB MariaDB Server
Copyright (c) 2000, 2015, Oracle, MariaDB Corporation Ab and others.
Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.
MariaDB [(none)]> 
MariaDB [(none)]> grant all privileges on *.* to root@'localhost' identified by '1428101ae612a0110bb9' with grant option; 
MariaDB [(none)]> grant all privileges on *.* to root@'%' identified by '1428101ae612a0110bb9' with grant option; 
MariaDB [(none)]> grant all privileges on *.* to root@'127.0.0.1' identified by '1428101ae612a0110bb9' with grant option;
MariaDB [(none)]> flush privileges;

################################################ NO.5 Openstack包  ##########################################################
理论部分:
各发行版(Linux系统)发布OpenStack包作为他们的一部分，因为OpenStack与发行版的发布时间是彼此独立的;
该部分描述了你在安装最新版OpenStack包之后必须进行的配置;
本例使用RDO的reposity,这些packages工作于RH平台,兼容Centos6,Fedora 20;
安装 yum-plugin-priorities 插件;此包允许相对优先级的分配所配置的软件库;该特性被RDO的发行版安装包使用;
# yum install yum-plugin-priorities
为了能够使用RDO的repository,需要下载安装do-release-icehouse package;
# yum install http://repos.fedorapeople.org/repos/openstack/openstack-icehouse/rdo-release-icehouse-3.noarch.rpm
EPEL的包包含GPG keys用于package签名以及repository信息;推荐安装于RH Linux或CentOS下,而不是Fedora;安装最新版的epel
-release包;例如:
# yum install http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
OpenStack-Utils包包含使得安装配置更容易的工具程序
# yum install openstack-utils

特别注意:
openstack-config程序使用(crudini)对ini配置文件的增删改查操作配置文件;可是,crudini(v0.3)不
支持多值选项;
openstack-selinux 程序(包含policy files,用以在 OpenStack安装于 RH或CentOS时,配置SELinux; 该步骤对Fedora不是必
须的;安装openstack-selinux,命令如下:
# yum install openstack-selinux
升级你的系统包:
# yum upgrade
如果包含内核升级,重启系统确保内核更新生效:
# reboot

实践部分:
Step1: 设置yum,下载安装软件后保留rpm包(方便以后非在线使用)
# 参考链接: http://zhangge.net/4222.html
# rpm包保存在 /var/cache/yum 中
[root@localhost ~]# mkdir -p /var/cache/yum
[root@localhost ~]# sed -ri "s/(cachedir=).*/\1\/var\/cache\/yum/" /etc/yum.conf
[root@localhost ~]# sed -ri "s/(keepcache=).*/\1 1/" /etc/yum.conf
[root@localhost ~]# yum install -y yum-plugin-priorities.noarch
# 下载epel-release-6-8.noarch.rpm, rdo-release-icehouse-3.noarch.rpm 到本地然后上传到各个
# 节点进行安装(rdo现在不提供icehouse，使用 rdo-release-mitaka-5.noarch.rpm 代替)
[root@localhost ~]# rpm -ivh rdo-release-mitaka-5.noarch.rpm
[root@localhost ~]# rpm -ivh epel-release-6-8.noarch.rpm
[root@localhost ~]# yum install -y openstack-utils.noarch
[root@localhost ~]# yum install openstack-selinux

# 如下两步，可选操作:
# [root@localhost ~]# yum upgrade
# [root@localhost ~]# reboot

################################################ NO.6 消息队列服务 ##########################################################
理论部分:
OpenStack 使用消息队列在诸服务间调度操作与状态信息;消息队列服务通常运行于控制节点;而Openstack对多种消息队列,e.g:rabbitmq,
qpid,zeromq,提供支持; 可是,大多数的(打包了某Openstack)Linux发行版本只提供对特定消息队列的支持; 本文包含对各消息队列的支持;如
果你偏爱某消息队列,大可查看相应的文档即可;
RabbitMQ  # http://www.rabbitmq.com/
Qpid      # http://qpid.apache.org/
ZeroMQ    # http://zeromq.org/
 
安装消息队列服务:
RHEL,CentOS,Scientific Linux,Fedora可安装Qpid
# yum install qpid-cpp-server
配置消息队列服务:
为了简化安装流程,我们建议disable认证,编辑配置文件 /etc/qpidd.conf ,修改如下键值:
..
auth=no

注意:
[ 在生产环境下, 你应该enable认证;如果你想要在生产环境下enable认证,你需要在各个配置使用到消息队列服务的OpenStack服务的
配置文件中配置qpid_username以及qpid_password ]

结束安装:启动消息队列服务并设置其开机自动启动
# service qpidd start
# chkconfig qpidd on
下面我们正式开始OpenStack各个服务的部署;

实践部分:
# 参考"RabbitMQ安装与使用"进行操作
[root@controller ~]# yum install -y rabbitmq-server.noarch
[root@controller rabbitmq]# pwd
/etc/rabbitmq
[root@controller rabbitmq]# cp rabbitmq.config rabbitmq.config.backup
[root@controller rabbitmq]# echo '' > rabbitmq.config
[root@controller rabbitmq]# vi rabbitmq.config
--------------------------------------------------------------
% This file managed by Puppet
% Template Path: rabbitmq/templates/rabbitmq.config
[
    {rabbit,
        [ {loopback_users, []},
          {tcp_listen_options,
	            [ binary,
	              {packet, raw},
	              {reuseaddr, true},
	              {backlog, 128},
	              {nodelay, true},
	              {exit_on_close, false},
	              {keepalive, true}
	            ]
	       },
		   {default_user, <<"guest">>},
		   {default_pass, <<"guest">>}
	    ]
    },
    {kernel,[]}
].
% EOF
--------------------------------------------------------------
[root@controller rabbitmq]# echo "RABBITMQ_NODE_PORT=5672" > /etc/rabbitmq/rabbitmq-env.conf
[root@controller rabbitmq]# systemctl enable rabbitmq-server
[root@controller rabbitmq]# systemctl start rabbitmq-server
[root@controller rabbitmq]# systemctl status rabbitmq-server
[root@controller ~]# netstat -ano | grep 5672
tcp        0      0 0.0.0.0:25672           0.0.0.0:*               LISTEN      off (0.00/0/0)
tcp6       0      0 :::5672                 :::*                    LISTEN      off (0.00/0/0)
[root@controller ~]# iptables -I INPUT -p tcp --dport 5672 -j ACCEPT

# 使用 "RestfulAPI的设计与实现及应用: 搭建 Restful API" 中提供的脚本测试 rabbitmq 是否可用;
# 注意修改对应的rabbitmq_host

# 参考官方:
# http://docs.openstack.org/icehouse/install-guide/install/yum/content/basics-prerequisites.html



