### 配置网络服务 ###
第0部分:  网络概念
第1部分:  网络2层插件
第2部分:  测试:创建虚拟机

########################################################## NO.0 网络概念 ###################################################################
(TODO)
OpenStack Networking (neutron) manages all of the networking facets for the Virtual Networking Infrastructure (VNI) and the access layer 
aspects of the Physical Networking Infrastructure (PNI) in your OpenStack environment. OpenStack Networking allows tenants to create 
advanced virtual network topologies including services such as firewalls, load balancers, and virtual private networks (VPNs).

Networking provides the following object abstractions: networks, subnets, and routers. Each has functionality that mimics its physical 
counterpart: networks contain subnets, and routers route traffic between different subnet and networks.

Any given Networking set up has at least one external network. This network, unlike the other networks, is not merely a virtually defined
network. Instead, it represents the view into a slice of the external network that is accessible outside the OpenStack installation. IP 
addresses on the Networking external network are accessible by anybody physically on the outside network. Because this network merely 
represents a slice of the outside network, DHCP is disabled on this network.

In addition to external networks, any Networking set up has one or more internal networks. These software-defined networks connect directly
to the VMs. Only the VMs on any given internal network, or those on subnets connected through interfaces to a similar router, can access 
VMs connected to that network directly.

For the outside network to access VMs, and vice versa, routers between the networks are needed. Each router has one gateway that is 
connected to a network and many interfaces that are connected to subnets. Like a physical router, subnets can access machines on other 
subnets that are connected to the same router, and machines can access the outside network through the gateway for the router.

Additionally, you can allocate IP addresses on external networks to ports on the internal network. Whenever something is connected to a 
subnet, that connection is called a port. You can associate external network IP addresses with ports to VMs. This way, entities on the 
outside network can access VMs.

Networking also supports security groups. Security groups enable administrators to define firewall rules in groups. A VM can belong to 
one or more security groups, and Networking applies the rules in those security groups to block or unblock ports, port ranges, or traffic
types for that VM.

Each plug-in that Networking uses has its own concepts. While not vital to operating Networking, understanding these concepts can help you
set up Networking. All Networking installations use a core plug-in and a security group plug-in (or just the No-Op security group plug-in).
Additionally, Firewall-as-a-service (FWaaS) and Load-balancing-as-a-service (LBaaS) plug-ins are available.

########################################################## NO.1 网络2层插件 ################################################################
理论部分:(TODO)
实践部分:
Part01: 配置主控节点
1.使用root用户登录数据库创建neutron数据库,赋权
[root@controller ~]# mysql -uroot -p
Enter password: 1428101ae612a0110bb9
MariaDB [(none)]> CREATE DATABASE neutron;
MariaDB [(none)]> GRANT ALL PRIVILEGES ON neutron.* TO 'neutron'@'localhost' IDENTIFIED BY 'f79719d688c353d0703c';
MariaDB [(none)]> GRANT ALL PRIVILEGES ON neutron.* TO 'neutron'@'%' IDENTIFIED BY 'f79719d688c353d0703c';
MariaDB [(none)]> FLUSH PRIVILEGES;
MariaDB [(none)]> quit

2.使用Identity服务为网络创建凭据
    a.创建neutron用户:
    [root@controller ~]# source keystonerc_admin 
    [root@controller ~(keystonerc_admin)]$ keystone user-create --name neutron --pass fd659cbfdc98a28bed5b --email neutron@qqvps.com
    +----------+----------------------------------+
    | Property |              Value               |
    +----------+----------------------------------+
    |  email   |        neutron@qqvps.com         |
    | enabled  |               True               |
    |    id    | 1481c48772d942399b54b3d841aa4957 |
    |   name   |             neutron              |
    | username |             neutron              |
    +----------+----------------------------------+
    b.将新用户分配到service租户以及admin角色:
    [root@controller ~(keystonerc_admin)]$ keystone user-role-add --user neutron --tenant service --role admin
    c.创建neutron服务:
    [root@controller ~(keystonerc_admin)]$ keystone service-create --name neutron --type network --description "OpenStack Networking"
    +-------------+----------------------------------+
    |   Property  |              Value               |
    +-------------+----------------------------------+
    | description |       OpenStack Networking       |
    |   enabled   |               True               |
    |      id     | 4e9761b48f944d4a9fbecf0aceffe7d1 |
    |     name    |             neutron              |
    |     type    |             network              |
    +-------------+----------------------------------+
    d.创建服务端点
    [root@controller ~(keystonerc_admin)]$ keystone service-list | awk '/ network / {print $2}'
    4e9761b48f944d4a9fbecf0aceffe7d1
    [root@controller ~(keystonerc_admin)]$ keystone endpoint-create --service-id  4e9761b48f944d4a9fbecf0aceffe7d1 
                                                                    --publicurl   http://controller:9696 
                                                                    --adminurl    http://controller:9696 
                                                                    --internalurl http://controller:9696
    +-------------+----------------------------------+
    |   Property  |              Value               |
    +-------------+----------------------------------+
    |   adminurl  |      http://controller:9696      |
    |      id     | 34533dab81f84e8ab65e6717dabb2fb0 |
    | internalurl |      http://controller:9696      |
    |  publicurl  |      http://controller:9696      |
    |    region   |            regionOne             |
    |  service_id | 4e9761b48f944d4a9fbecf0aceffe7d1 |
    +-------------+----------------------------------+

3.安装网络组件
[root@controller ~]$ yum install -y openstack-neutron.noarch openstack-neutron-ml2.noarch python-neutronclient.noarch

4.配置neutron server组件
    a.配置网络服务使用数据库:
    [root@controller ~]$ openstack-config --set /etc/neutron/neutron.conf database connection \
                                                                mysql://neutron:f79719d688c353d0703c@controller/neutron
    b.配置neutron使用Identity服务认证:
    [root@controller ~]$ openstack-config --set /etc/neutron/neutron.conf DEFAULT auth_strategy keystone
    [root@controller ~]$ openstack-config --set /etc/neutron/neutron.conf keystone_authtoken auth_uri http://controller:5000
    [root@controller ~]$ openstack-config --set /etc/neutron/neutron.conf keystone_authtoken auth_host controller
    [root@controller ~]$ openstack-config --set /etc/neutron/neutron.conf keystone_authtoken auth_protocol http
    [root@controller ~]$ openstack-config --set /etc/neutron/neutron.conf keystone_authtoken auth_port 35357
    [root@controller ~]$ openstack-config --set /etc/neutron/neutron.conf keystone_authtoken admin_tenant_name service
    [root@controller ~]$ openstack-config --set /etc/neutron/neutron.conf keystone_authtoken admin_user neutron
    [root@controller ~]$ openstack-config --set /etc/neutron/neutron.conf keystone_authtoken admin_password fd659cbfdc98a28bed5b
    
    c.配置网络服务使用rabbitmq消息队列:
    [root@controller ~]$ openstack-config --set /etc/neutron/neutron.conf DEFAULT rpc_backend neutron.openstack.common.rpc.impl_kombu
    [root@network ~]# openstack-config --set /etc/neutron/neutron.conf DEFAULT rabbit_host 10.160.0.116
    [root@network ~]# openstack-config --set /etc/neutron/neutron.conf DEFAULT rabbit_password guest
    [root@network ~]# openstack-config --set /etc/neutron/neutron.conf DEFAULT rabbit_port 5672
    [root@network ~]# openstack-config --set /etc/neutron/neutron.conf DEFAULT rabbit_hosts 10.160.0.116:5672
    [root@network ~]# openstack-config --set /etc/neutron/neutron.conf DEFAULT rabbit_userid guest
    [root@network ~]# openstack-config --set /etc/neutron/neutron.conf DEFAULT rabbit_virtual_host /
    [root@network ~]# openstack-config --set /etc/neutron/neutron.conf DEFAULT rabbit_ha_queues False
    [root@network ~]# openstack-config --set /etc/neutron/neutron.conf DEFAULT rabbit_use_ssl False
    
    d.配置neutron通知nova关于网络拓扑变动:
    [root@network ~]# openstack-config --set /etc/neutron/neutron.conf DEFAULT notify_nova_on_port_status_changes True
    [root@network ~]# openstack-config --set /etc/neutron/neutron.conf DEFAULT notify_nova_on_port_data_changes True
    [root@controller ~(keystonerc_admin)]$ openstack-config --set /etc/neutron/neutron.conf DEFAULT nova_url http://controller:8774/v2
    [root@controller ~(keystonerc_admin)]$ openstack-config --set /etc/neutron/neutron.conf DEFAULT nova_admin_username nova
    [root@controller ~(keystonerc_admin)]$ keystone tenant-list | awk '/ service / { print $2 }'
    3fb14bc2d9f149e18991c7bd0f67b7f6
    [root@controller ~]$ openstack-config --set /etc/neutron/neutron.conf DEFAULT nova_admin_tenant_id 3fb14bc2d9f149e18991c7bd0f67b7f6
    [root@controller ~]$ openstack-config --set /etc/neutron/neutron.conf DEFAULT nova_admin_password 0275aa48b1e0a313bced
    [root@controller ~]$ openstack-config --set /etc/neutron/neutron.conf DEFAULT nova_admin_auth_url http://controller:35357/v2.0
    
    e.配置使用ml2组件以及相关服务
    [root@controller ~]$ openstack-config --set /etc/neutron/neutron.conf DEFAULT core_plugin ml2
    [root@controller ~]$ openstack-config --set /etc/neutron/neutron.conf DEFAULT service_plugins router
    
    f.开启调试模式以辅助troubleshooting
    [root@controller ~]$ openstack-config --set /etc/neutron/neutron.conf DEFAULT verbose  True
    
5.配置ml2插件
[root@controller ~(keystonerc_admin)]$ openstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini ml2 type_drivers vxlan
[root@controller ~(keystonerc_admin)]$ openstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini ml2 mechanism_drivers openvswitch
[root@controller ~(keystonerc_admin)]$ openstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini ml2 tenant_network_types vxlan
[root@controller ~(keystonerc_admin)]$ openstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini ml2_type_vxlan vni_ranges 1:1000
[root@controller ~(keystonerc_admin)]$ openstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini securitygroup enable_security_group True

6.配置计算服务使用网络组件
[root@controller ~]# openstack-config --set /etc/nova/nova.conf DEFAULT network_api_class nova.network.neutronv2.api.API
[root@controller ~]# openstack-config --set /etc/nova/nova.conf DEFAULT neutron_url http://controller:9696
[root@controller ~]# openstack-config --set /etc/nova/nova.conf DEFAULT neutron_auth_strategy keystone
[root@controller ~]# openstack-config --set /etc/nova/nova.conf DEFAULT neutron_admin_tenant_name service
[root@controller ~]# openstack-config --set /etc/nova/nova.conf DEFAULT neutron_admin_username neutron
[root@controller ~]# openstack-config --set /etc/nova/nova.conf DEFAULT neutron_admin_password fd659cbfdc98a28bed5b
[root@controller ~]# openstack-config --set /etc/nova/nova.conf DEFAULT neutron_admin_auth_url http://controller:35357/v2.0
[root@controller ~]# openstack-config --set /etc/nova/nova.conf DEFAULT linuxnet_interface_driver \
                                                                     nova.network.linux_net.LinuxOVSInterfaceDriver
[root@controller ~]# openstack-config --set /etc/nova/nova.conf DEFAULT firewall_driver \
                                                                     nova.virt.libvirt.firewall.IptablesFirewallDriver
[root@controller ~]# openstack-config --set /etc/nova/nova.conf DEFAULT security_group_api neutron

7.最后的安装


Part03: 配置网络节点
Part03: 配置计算节点
Part04: 创建初始网络

########################################################## NO.2 测试:创建虚拟机 ############################################################
