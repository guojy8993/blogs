### 计算服务 ###
第0部分:  计算服务组件介绍
第1部分:  安装计算服务的主控服务
第2部分:  配置计算节点

################################################ NO.0 计算服务组件介绍 ###############################################################

计算服务是云计算的基础控制器, 是iass系统的主要组成部分.利用它以创建管理云计算系统. 主要的模块使用python实现;
house -  Icehouse -  Icehouse -  Icehouse -  Icehouse -  Icehouse -  Icehouse -  Icehouse - 
 Compute service

The Compute service is a cloud computing fabric controller, which is the main part of an IaaS system. Use it to host and manage cloud computing systems. The main modules are implemented in Python.

Compute interacts with the Identity Service for authentication, Image Service for images, and the Dashboard for the user and administrative interface. Access to images is limited by project and by user; quotas are limited per project (for example, the number of instances). The Compute service scales horizontally on standard hardware, and downloads images to launch instances as required.

The Compute service is made up of the following functional areas and their underlying components:

API

    nova-api service. Accepts and responds to end user compute API calls. Supports the OpenStack Compute API, the Amazon EC2 API, and a special Admin API for privileged users to perform administrative actions. Also, initiates most orchestration activities, such as running an instance, and enforces some policies.

    nova-api-metadata service. Accepts metadata requests from instances. The nova-api-metadata service is generally only used when you run in multi-host mode with nova-network installations. For details, see Metadata service in the Cloud Administrator Guide.

    On Debian systems, it is included in the nova-api package, and can be selected through debconf.

Compute core

    nova-compute process. A worker daemon that creates and terminates virtual machine instances through hypervisor APIs. For example, XenAPI for XenServer/XCP, libvirt for KVM or QEMU, VMwareAPI for VMware, and so on. The process by which it does so is fairly complex but the basics are simple: Accept actions from the queue and perform a series of system commands, like launching a KVM instance, to carry them out while updating state in the database.

    nova-scheduler process. Conceptually the simplest piece of code in Compute. Takes a virtual machine instance request from the queue and determines on which compute server host it should run.

    nova-conductor module. Mediates interactions between nova-compute and the database. Aims to eliminate direct accesses to the cloud database made by nova-compute. The nova-conductor module scales horizontally. However, do not deploy it on any nodes where nova-compute runs. For more information, see A new Nova service: nova-conductor.

Networking for VMs

    nova-network worker daemon. Similar to nova-compute, it accepts networking tasks from the queue and performs tasks to manipulate the network, such as setting up bridging interfaces or changing iptables rules. This functionality is being migrated to OpenStack Networking, which is a separate OpenStack service.

    nova-dhcpbridge script. Tracks IP address leases and records them in the database by using the dnsmasq dhcp-script facility. This functionality is being migrated to OpenStack Networking. OpenStack Networking provides a different script.

Console interface

    nova-consoleauth daemon. Authorizes tokens for users that console proxies provide. See nova-novncproxy and nova-xvpnvcproxy. This service must be running for console proxies to work. Many proxies of either type can be run against a single nova-consoleauth service in a cluster configuration. For information, see About nova-consoleauth.

    nova-novncproxy daemon. Provides a proxy for accessing running instances through a VNC connection. Supports browser-based novnc clients.

    nova-xvpnvncproxy daemon. A proxy for accessing running instances through a VNC connection. Supports a Java client specifically designed for OpenStack.

    nova-cert daemon. Manages x509 certificates.

Image management (EC2 scenario)

    nova-objectstore daemon. Provides an S3 interface for registering images with the Image Service. Mainly used for installations that must support euca2ools. The euca2ools tools talk to nova-objectstore in S3 language, and nova-objectstore translates S3 requests into Image Service requests.

    euca2ools client. A set of command-line interpreter commands for managing cloud resources. Though not an OpenStack module, you can configure nova-api to support this EC2 interface. For more information, see the Eucalyptus 3.4 Documentation.

Command-line clients and other interfaces

    nova client. Enables users to submit commands as a tenant administrator or end user.

    nova-manage client. Enables cloud administrators to submit commands.

Other components

    The queue. A central hub for passing messages between daemons. Usually implemented with RabbitMQ, but could be any AMQP message queue, such as Apache Qpid or Zero MQ.

    SQL database. Stores most build-time and runtime states for a cloud infrastructure. Includes instance types that are available for use, instances in use, available networks, and projects. Theoretically, OpenStack Compute can support any database that SQL-Alchemy supports, but the only databases widely used are SQLite3 databases (only appropriate for test and development work), MySQL, and PostgreSQL.

The Compute service interacts with other OpenStack services: Identity Service for authentication, Image Service for images, and the OpenStack dashboard for a web interface.
################################################ NO.1 安装计算服务的主控服务 #########################################################
实践部分:
1.安装 openstack-nova-* 组件
[root@controller ~]# yum install -y openstack-nova-api
[root@controller ~]# yum install -y openstack-nova-cert 
[root@controller ~]# yum install -y openstack-nova-conductor 
[root@controller ~]# yum install -y openstack-nova-console
[root@controller ~]# rpm -U /opt/rpms/python-websockify-0.6.0-2.el7.noarch.rpm
[root@controller ~]# rpm -ivh /opt/rpms/novnc-0.5.1-2.el7.noarch.rpm
[root@controller ~]# yum install -y openstack-nova-novncproxy
[root@controller ~]# yum install -y openstack-nova-scheduler 
[root@controller ~]# yum install -y python-novaclient

2.修改nova.conf 中数据库连接参数
[root@controller ~(keystonerc_admin)]$ openstack-config --set /etc/nova/nova.conf database connection \
                                                          mysql://nova:8430e3bff4d000a04085@controller/nova

3.修改配置nova.conf中rabbitmq消息队列信息
[root@controller ~(keystonerc_admin)]$ openstack-config --set /etc/nova/nova.conf DEFAULT rpc_backend rabbit
[root@controller ~(keystonerc_admin)]$ openstack-config --set /etc/nova/nova.conf DEFAULT rabbit_host 10.160.0.116
[root@controller ~(keystonerc_admin)]$ openstack-config --set /etc/nova/nova.conf DEFAULT rabbit_port 5672
[root@controller ~(keystonerc_admin)]$ openstack-config --set /etc/nova/nova.conf DEFAULT rabbit_hosts  10.160.0.116:5672
[root@controller ~(keystonerc_admin)]$ openstack-config --set /etc/nova/nova.conf DEFAULT rabbit_use_ssl false
[root@controller ~(keystonerc_admin)]$ openstack-config --set /etc/nova/nova.conf DEFAULT rabbit_userid guest
[root@controller ~(keystonerc_admin)]$ openstack-config --set /etc/nova/nova.conf DEFAULT rabbit_password guest
[root@controller ~(keystonerc_admin)]$ openstack-config --set /etc/nova/nova.conf DEFAULT rabbit_virtual_host  /
[root@controller ~(keystonerc_admin)]$ openstack-config --set /etc/nova/nova.conf DEFAULT rabbit_ha_queues false

4.修改配置文件中vncproxy相关参数
[root@controller ~(keystonerc_admin)]$ openstack-config --set /etc/nova/nova.conf DEFAULT my_ip 10.160.0.116
[root@controller ~(keystonerc_admin)]$ openstack-config --set /etc/nova/nova.conf DEFAULT vncserver_listen 10.160.0.116
[root@controller ~(keystonerc_admin)]$ openstack-config --set /etc/nova/nova.conf DEFAULT vncserver_proxyclient_address 10.160.0.116

5.使用root用户登录数据库创建nova数据库,赋权
[root@controller ~(keystonerc_admin)]$ mysql -uroot -p
Enter password: 1428101ae612a0110bb9
MariaDB [(none)]> CREATE DATABASE nova;
MariaDB [(none)]> GRANT ALL PRIVILEGES ON nova.* TO 'nova'@'localhost' IDENTIFIED BY '8430e3bff4d000a04085';
MariaDB [(none)]> GRANT ALL PRIVILEGES ON nova.* TO 'nova'@'%' IDENTIFIED BY '8430e3bff4d000a04085';
MariaDB [(none)]> FLUSH PRIVILEGES;
MariaDB [(none)]> quit

6.初始化nova数据库的各种表
[root@controller ~(keystonerc_admin)]$ su -s /bin/sh -c "nova-manage db sync" nova


7.创建nova用户并添加service租户,admin角色
[root@controller ~(keystonerc_admin)]$ keystone user-create 
                        --name=nova --pass=0275aa48b1e0a313bced --email=nova@qqvps.com
+----------+----------------------------------+
| Property |              Value               |
+----------+----------------------------------+
|  email   |          nova@qqvps.com          |
| enabled  |               True               |
|    id    | 04aee8b4fb834bcdbb4e8444e559fc8a |
|   name   |               nova               |
| username |               nova               |
+----------+----------------------------------+
[root@controller ~(keystonerc_admin)]$ keystone user-role-add --user=nova --tenant=service --role=admin


8.修改配置文件中nova使用的keystone凭据信息
[root@controller ~(keystonerc_admin)]$ openstack-config --set /etc/nova/nova.conf DEFAULT auth_strategy keystone
[root@controller ~(keystonerc_admin)]$ openstack-config --set /etc/nova/nova.conf keystone_authtoken auth_uri http://controller:5000
[root@controller ~(keystonerc_admin)]$ openstack-config --set /etc/nova/nova.conf keystone_authtoken auth_host controller
[root@controller ~(keystonerc_admin)]$ openstack-config --set /etc/nova/nova.conf keystone_authtoken auth_protocol http
[root@controller ~(keystonerc_admin)]$ openstack-config --set /etc/nova/nova.conf keystone_authtoken auth_port 35357
[root@controller ~(keystonerc_admin)]$ openstack-config --set /etc/nova/nova.conf keystone_authtoken admin_user nova
[root@controller ~(keystonerc_admin)]$ openstack-config --set /etc/nova/nova.conf keystone_authtoken admin_tenant_name service
[root@controller ~(keystonerc_admin)]$ openstack-config --set /etc/nova/nova.conf keystone_authtoken admin_password 0275aa48b1e0a313bced

9.在keystone中注册nova服以及endpoint
[root@controller ~(keystonerc_admin)]$ keystone service-create --name=nova 
--type=compute --description="OpenStack Compute"
+-------------+----------------------------------+
|   Property  |              Value               |
+-------------+----------------------------------+
| description |        OpenStack Compute         |
|   enabled   |               True               |
|      id     | 0909ef744e014cdcb77a5cb21cda31ea |
|     name    |               nova               |
|     type    |             compute              |
+-------------+----------------------------------+

[root@controller ~(keystonerc_admin)]$ keystone endpoint-create --service-id=$(keystone service-list | \
                                           awk '/ compute / {print $2}') --publicurl=http://controller:8774/v2/%\(tenant_id\)s  \
                                           --internalurl=http://controller:8774/v2/%\(tenant_id\)s  \
                                           --adminurl=http://controller:8774/v2/%\(tenant_id\)s
+-------------+-----------------------------------------+
|   Property  |                  Value                  |
+-------------+-----------------------------------------+
|   adminurl  | http://controller:8774/v2/%(tenant_id)s |
|      id     |     61614007562340c1991a452c5ed4ca33    |
| internalurl | http://controller:8774/v2/%(tenant_id)s |
|  publicurl  | http://controller:8774/v2/%(tenant_id)s |
|    region   |                regionOne                |
|  service_id |     0909ef744e014cdcb77a5cb21cda31ea    |
+-------------+-----------------------------------------+

10.开启各个服务并设置服务的开机启动
[root@controller ~(keystonerc_admin)]$ for comp in {"api","cert","consoleauth","scheduler","conductor","novncproxy"};  \
do systemctl enable openstack-nova-${comp};systemctl start openstack-nova-${comp};done

[root@controller ~(keystonerc_admin)]$ for comp in {"api","cert","consoleauth","scheduler","conductor","novncproxy"};  \
do systemctl status openstack-nova-${comp};done

################################################ NO.2 配置计算节点 ###################################################################
