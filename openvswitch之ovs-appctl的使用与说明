经典用途:  ovs调试流表
经典用法:  ovs-appctl ofproto/trace OVS_BRIDGE FIELDS_DESC {-generate}
           说明: 
              -generate 在测试"learn"时非常有用,确实发送包含FIELDS_DESC域的帧;
              FIELDS_DESC 参考ovs-ofctl add-flows中的域.
命令示范:  ovs-appctl ofproto/trace br-tun in_port=2,dl_vlan=2,dl_src=52:54:00:00:db:fb,dl_dst=ff:ff:ff:ff:ff:ff -generate

应用实践: "使用ovs-appctl调试计算节点/网络节点"
[root@compute ~]# ovs-appctl ofproto/trace br-tun in_port=2,dl_vlan=2,dl_src=52:54:00:00:db:fb,dl_dst=ff:ff:ff:ff:ff:ff -generate
Bridge: br-tun
Flow: in_port=2,dl_vlan=2,dl_vlan_pcp=0,dl_src=52:54:00:00:db:fb,dl_dst=ff:ff:ff:ff:ff:ff,dl_type=0x0000
Rule: table=0 cookie=0 priority=1,in_port=2
OpenFlow actions=resubmit(,1)
  	Resubmitted flow: in_port=2,dl_vlan=2,dl_vlan_pcp=0,dl_src=52:54:00:00:db:fb,dl_dst=ff:ff:ff:ff:ff:ff,dl_type=0x0000
  	Resubmitted regs: reg0=0x0 reg1=0x0 reg2=0x0 reg3=0x0 reg4=0x0 reg5=0x0 reg6=0x0 reg7=0x0
  	Resubmitted  odp: drop
  	Resubmitted megaflow: recirc_id=0,in_port=2,dl_dst=01:00:00:00:00:00/01:00:00:00:00:00,dl_type=0x0000
  	Rule: table=1 cookie=0 priority=1,dl_dst=01:00:00:00:00:00/01:00:00:00:00:00
  	OpenFlow actions=resubmit(,21)
    		Resubmitted flow: unchanged
    		Resubmitted regs: reg0=0x0 reg1=0x0 reg2=0x0 reg3=0x0 reg4=0x0 reg5=0x0 reg6=0x0 reg7=0x0
    		Resubmitted  odp: drop
    		Resubmitted megaflow: recirc_id=0,in_port=2,dl_vlan=2,dl_dst=01:00:00:00:00:00/01:00:00:00:00:00,dl_type=0x0000
    		Rule: table=21 cookie=0 dl_vlan=2
    		OpenFlow actions=strip_vlan,set_tunnel:0x2,output:1
    		output to kernel tunnel

Final flow: tun_id=0x2,in_port=2,vlan_tci=0x0000,dl_src=52:54:00:00:db:fb,dl_dst=ff:ff:ff:ff:ff:ff,dl_type=0x0000
Megaflow: recirc_id=0,in_port=2,dl_vlan=2,dl_vlan_pcp=0,dl_dst=01:00:00:00:00:00/01:00:00:00:00:00,dl_type=0x0000
Datapath actions: set(tunnel(tun_id=0x2,src=10.160.0.128,dst=10.160.0.130,ttl=64,flags(df|key))),pop_vlan,3

# 可以看到模拟虚拟机发送的包送入计算节点br-tun之后被"strip_vlan,set_tunnel:0x2,output:1" output to kernel tunnel
# 然后在网络节点模拟从隧道发送进入网络节点br-tun:
[root@network ~]# ovs-appctl ofproto/trace br-tun in_port=1,tunnel_id=0x2,dl_src=52:54:00:00:db:fb,dl_dst=ff:ff:ff:ff:ff:ff -generate
Bridge: br-tun
Flow: tun_id=0x2,in_port=1,vlan_tci=0x0000,dl_src=52:54:00:00:db:fb,dl_dst=ff:ff:ff:ff:ff:ff,dl_type=0x0000

Rule: table=0 cookie=0 priority=1,in_port=1
OpenFlow actions=resubmit(,3)

	Resubmitted flow: tun_id=0x2,in_port=1,vlan_tci=0x0000,dl_src=52:54:00:00:db:fb,dl_dst=ff:ff:ff:ff:ff:ff,dl_type=0x0000
	Resubmitted regs: reg0=0x0 reg1=0x0 reg2=0x0 reg3=0x0 reg4=0x0 reg5=0x0 reg6=0x0 reg7=0x0
	Resubmitted  odp: drop
	Resubmitted megaflow: recirc_id=0,tun_id=0x2,in_port=1,dl_type=0x0000
	Rule: table=3 cookie=0 priority=1,tun_id=0x2
	OpenFlow actions=mod_vlan_vid:100,resubmit(,10)
  		Resubmitted flow: tun_id=0x2,in_port=1,dl_vlan=100,dl_vlan_pcp=0,dl_src=52:54:00:00:db:fb,dl_dst=ff:ff:ff:ff:ff:ff,dl_type=0x0000
  		Resubmitted regs: reg0=0x0 reg1=0x0 reg2=0x0 reg3=0x0 reg4=0x0 reg5=0x0 reg6=0x0 reg7=0x0
  		Resubmitted  odp: drop
  		Resubmitted megaflow: recirc_id=0,tun_id=0x2,in_port=1,vlan_tci=0x0000/0x1fff,dl_type=0x0000
  		Rule: table=10 cookie=0 priority=1
  		OpenFlow actions=learn(table=20,hard_timeout=300,priority=1,NXM_OF_VLAN_TCI[0..11],NXM_OF_ETH_DST[]=NXM_OF_ETH_SRC[],\
  		                       load:0->NXM_OF_VLAN_TCI[],load:NXM_NX_TUN_ID[]->NXM_NX_TUN_ID[],output:NXM_OF_IN_PORT[]),output:2
    			Resubmitted flow: in_port=1,dl_vlan=100,dl_vlan_pcp=0,dl_src=52:54:00:00:db:fb,dl_dst=ff:ff:ff:ff:ff:ff,dl_type=0x0000
    			Resubmitted regs: reg0=0x0 reg1=0x0 reg2=0x0 reg3=0x0 reg4=0x0 reg5=0x0 reg6=0x0 reg7=0x0
    			Resubmitted  odp: drop
    			Resubmitted megaflow: recirc_id=0,tun_id=0x2,in_port=1,vlan_tci=0x0000/0x1fff,dl_src=52:54:00:00:db:fb,dl_type=0x0000
    			Rule: table=0 cookie=0 priority=1
    			OpenFlow actions=NORMAL
    			no learned MAC for destination, flooding
Final flow: tun_id=0x2,in_port=1,dl_vlan=100,dl_vlan_pcp=0,dl_src=52:54:00:00:db:fb,dl_dst=ff:ff:ff:ff:ff:ff,dl_type=0x0000
Megaflow: recirc_id=0,tun_id=0x2,in_port=1,vlan_tci=0x0000,dl_src=52:54:00:00:db:fb,dl_dst=ff:ff:ff:ff:ff:ff,dl_type=0x0000
Datapath actions: push_vlan(vid=100,pcp=0),3,pop_vlan,7,6
# 可以看到被br-tun发送到br-int,然后洪泛(带vlan,有限洪泛);
依次确定计算节点的虚拟机在2层上与租户私有路由是畅通的.


