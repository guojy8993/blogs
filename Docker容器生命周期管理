[目录]
1. Docker容器的创建与启动
2. Docker容器的

## 第一部分 Docker 容器的创建与启动 ##
[root@docker ~]# docker create --help
Usage:	docker create [OPTIONS] IMAGE [COMMAND] [ARG...]
Create a new container
  -a, --attach=[]                 Attach to STDIN, STDOUT or STDERR                 # 附件到stdin/out/err           
  --add-host=[]                   Add a custom host-to-IP mapping (host:ip)         # 猜测: /etc/hosts
  --blkio-weight                  Block IO (relative weight), between 10 and 1000   # 块设备分配io时的权重
  --blkio-weight-device=[]        Block IO weight (relative device weight)
  --cpu-shares                    CPU shares (relative weight)
  --cap-add=[]                    Add Linux capabilities                    # 使用linux特性
  --cap-drop=[]                   Drop Linux capabilities                   # 不使用linux特性
  --cgroup-parent                 Optional parent cgroup for the container  # 该容器可选的父cgroup(猜测:类似套餐)
  --cidfile                       Write the container ID to the file        # 将容器id写入文件
  --cpu-period                    Limit CPU CFS (Completely Fair Scheduler) period  # 百度: CFS
  --cpu-quota                     Limit CPU CFS (Completely Fair Scheduler) quota
  --cpuset-cpus                   CPUs in which to allow execution (0-3, 0,1)       # CPU绑定
  --cpuset-mems                   MEMs in which to allow execution (0-3, 0,1)
  --device=[]                     Add a host device to the container        # 添加宿主设备(网络设备?块设备?)到容器
  --device-read-bps=[]            Limit read rate (bytes per second) from a device  # 限制设备每秒读字节数
  --device-read-iops=[]           Limit read rate (IO per second) from a device     # 限制设备每秒读IO数
  --device-write-bps=[]           Limit write rate (bytes per second) to a device   # 限制设备每秒写IO数
  --device-write-iops=[]          Limit write rate (IO per second) to a device      # 限制设备每秒写IO数
  --disable-content-trust=true    Skip image verification                           # 启动容器是否验证镜像
  --dns=[]                        Set custom DNS servers                            # 设置 DNS 服务器("8.8.8.8"..)
  --dns-opt=[]                    Set DNS options                                   # 设置 DNS 选项
  --dns-search=[]                 Set custom DNS search domains                     # 设置 DNS 查找主机("bar.foo.com")
  -e, --env=[]                    Set environment variables                         # 设置环境变量
  --entrypoint                    Overwrite the default ENTRYPOINT of the image     # 重写镜像默认的 EntryPoint
  --env-file=[]                   Read in a file of environment variables           # 从文件导入环境变量
  --expose=[]                     Expose a port or a range of ports                 # 对外暴露一个/组端口
  --group-add=[]                  Add additional groups to join                     # 加入到N个指定用户(??)中
  -h, --hostname                  Container host name                               # 指定 /etc/hostname
  -i, --interactive               Keep STDIN open even if not attached              # 保持stdin开放(即使尚未attach)
  --ip                            Container IPv4 address (e.g. 172.30.100.104)      # 配置指定IPv4
  --ip6                           Container IPv6 address (e.g. 2001:db8::33)        # 配置指定IPv6
  --ipc                           IPC namespace to use                              # 进行跨进程通信时使用的命名空间
  --isolation                     Container isolation level                         # 容器隔离水平(Low?Normal?High?)
  --kernel-memory                 Kernel memory limit                         # 内核内存限制(防止容器受攻击拖累宿主)
  -l, --label=[]                  Set meta data on a container                # 设置容器的元数据(??)
  --label-file=[]                 Read in a line delimited file of labels     # 从文件导入容器的元数据
  --link=[]                       Add link to another container               # 添加链路连接另一个容器
  --log-driver                    Logging driver for container                # 容器使用的 log driver
  --log-opt=[]                    Log driver options                          # 容器使用的 log driver 选项
  -m, --memory                    Memory limit                                # 限制内存使用
  --mac-address                   Container MAC address (e.g. 92:d0:c6:0a:29:33)     # 容器网卡的mac(?只能单网卡?)
  --memory-reservation            Memory soft limit                                  # 内存使用的软限制
  --memory-swap                   Swap limit equal to memory plus swap: '-1' to enable unlimited swap   # 设置 swap 
  --memory-swappiness=-1          Tune container memory swappiness (0 to 100) # 调整容器swap(对?(swap+mempory)?)的占比
  --name                          Assign a name to the container              # 自定义容器名
  --net=default                   Connect a container to a network            # 连接容器到指定网络
  --net-alias=[]                  Add network-scoped alias for the container  # ??
  --oom-kill-disable              Disable OOM Killer                          # 关闭 "容器内存溢出则终止" 的功能
  --oom-score-adj                 Tune host's OOM preferences (-1000 to 1000) # 调整宿主 OOM 优先权(??)
  -P, --publish-all               Publish all exposed ports to random ports   # 发布容器的暴露端口(s)为宿主随机端口(s)
  -p, --publish=[]                Publish a container's port(s) to the host   # 发布容器的指定暴露端口为宿主某指定端口
  --pid                           PID namespace to use                        # PID 命名空间(??)
  --privileged                    Give extended privileges to this container  # 基于容器扩展特权(??)
  --read-only                     Mount the container's root filesystem as read only     # 以ro方式挂载容器root文件系统
  --restart=no                    Restart policy to apply when a container exits         # 创建是发现已存在容器是否重启之
  --security-opt=[]               Security Options                            # 安全选项(??)
  --shm-size                      Size of /dev/shm, default value is 64MB     # 共享内存(?作用?)大小
  --stop-signal=SIGTERM           Signal to stop a container, SIGTERM by default         # 容器接受何种信号以结束运行
  --sysctl=map[]                  Sysctl options                                         # sysctl 配置
  -t, --tty                       Allocate a pseudo-TTY                                  # 分配 pseudo-TTY
  --tmpfs=[]                      Mount a tmpfs directory                                # 挂载 tmpfs 目录
  -u, --user                      Username or UID (format: <name|uid>[:<group|gid>])     # 属主 name[:group] 或 uid[:gid]
  --ulimit=[]                     Ulimit options                              # Ulimit(??)配置
  --uts                           UTS namespace to use                        # UTS 命名空间
  -v, --volume=[]                 Bind mount a volume                         # 挂载卷到容器
  --volume-driver                 Optional volume driver for the container    # 容器的卷驱动(virtio?)
  --volumes-from=[]               Mount volumes from the specified container(s)          # 挂载指定容器作为卷(s)
  -w, --workdir                   Working directory inside the container      # 指定容器工作目录




## 第二部分 Docker 容器的创建 ##
## 第三部分 Docker 容器的创建 ##
## 第四部分 Docker 容器的创建 ##
