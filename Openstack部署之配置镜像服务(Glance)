### 基础环境配置 ###
第0部分:  镜像服务总览
第1部分:  安装镜像服务
第2部分:  验收镜像服务

################################################ NO.0 镜像服务总览 ############################################################
    OpenStack惊险服务允许用户发现,注册,抽取虚拟机镜像，即知名项目"Glance"; 该项目向用户提供一套RestAPI,允许查询镜像元数据以及
抽取真实镜像. 你可以使用从简单的文件或者对象存储系统来存放镜像.
## 重要信息:
简单起见,本篇文章使用简单文件做镜像服务后端；这意味着你上穿得镜像将会保存到运行该服务的童泰宿主上。默认情形,该文件夹为 /var/
lib/glance/images/.在你开始之前,确保你的系统在该目录下挂在足够容量的硬盘来保存虚拟机镜像与快照; 

镜像服务包含如下组件:
glance-api: 接受镜像API调用以发现抽取存储镜像.
glance-registry: 存储,处理,抽取镜像元数据. 其中镜像元数据包含信息诸如大小与类型.
## 安全手册:
## glance-registry是一个私密的内部服务,这意味着该服务仅仅被镜像服务自己使用,不要暴露给用户;
数据库: 你可以使用数据库存储镜像元数据,Mysql或sqlite都可以,具体如何按自己的偏好来吧;
镜像的存储库: 镜像服务支持多种文件系统,对象存储,RDO块设备,http,aws;
一些间歇性的程序运行于镜像服务中以支持缓存.复制服务通过集群以实现连续性以及可用性; 其他的间歇进程,包括核算,更新,收割;
如前文 "概念架构"所阐述的,镜像服务居于整个 iaas框图的中心,它接受来自客户的或计算组件的 关于镜像或镜像元数据的 API调用,他
还可以及囊他的数据存储在对象存储服务中;

################################################ NO.1 安装镜像服务 ############################################################
Install the Image Service

The OpenStack Image Service acts as a registry for virtual disk images. Users can add new images or take a snapshot of an image 
from an existing server for immediate storage. Use snapshots for back up and as templates to launch new servers. You can store 
registered images in Object Storage or in other locations. For example, you can store images in simple file systems or external 
web servers.

[Note]	Note
This procedure assumes you set the appropriate environment variables to your credentials as described in the section called 
“Verify the Identity Service installation”.

Install the Image Service on the controller node:

# apt-get install glance python-glanceclient
The Image Service stores information about images in a database. The examples in this guide use the MySQL database that is
used by other OpenStack services.

Configure the location of the database. The Image Service provides the glance-api and glance-registry services, each with its 
own configuration file. You must update both configuration files throughout this section. Replace GLANCE_DBPASS with your Image
Service database password.

Edit /etc/glance/glance-api.conf and /etc/glance/glance-registry.conf and edit the [database] section of each file:

Select Text
1
2
3
...
[database]
connection = mysql://glance:GLANCE_DBPASS@controller/glance
By default, the Ubuntu packages create an SQLite database. Delete the glance.sqlite file created in the /var/lib/glance/
directory so that it does not get used by mistake:

# rm /var/lib/glance/glance.sqlite
Use the password you created to log in as root and create a glance database user:

$ mysql -u root -p
mysql> CREATE DATABASE glance;
mysql> GRANT ALL PRIVILEGES ON glance.* TO 'glance'@'localhost' \
IDENTIFIED BY 'GLANCE_DBPASS';
mysql> GRANT ALL PRIVILEGES ON glance.* TO 'glance'@'%' \
IDENTIFIED BY 'GLANCE_DBPASS';
Create the database tables for the Image Service:

# su -s /bin/sh -c "glance-manage db_sync" glance
Create a glance user that the Image Service can use to authenticate with the Identity service. Choose a password and 
specify an email address for the glance user. Use the service tenant and give the user the admin role:

$ keystone user-create --name=glance --pass=GLANCE_PASS \
   --email=glance@example.com
$ keystone user-role-add --user=glance --tenant=service --role=admin
Configure the Image Service to use the Identity Service for authentication.

Edit the /etc/glance/glance-api.conf and /etc/glance/glance-registry.conf files. Replace GLANCE_PASS with the password you 
chose for the glance user in the Identity service.

Add or modify the following keys under the [keystone_authtoken] section:

Select Text
1
2
3
4
5
6
7
8
[keystone_authtoken]
auth_uri = http://controller:5000
auth_host = controller
auth_port = 35357
auth_protocol = http
admin_tenant_name = service
admin_user = glance
admin_password = GLANCE_PASS
Modify the following key under the [paste_deploy] section:

Select Text
1
2
3
[paste_deploy]
...
flavor = keystone
Register the Image Service with the Identity service so that other OpenStack services can locate it. Register the service 
and create the endpoint:

$ keystone service-create --name=glance --type=image \
  --description="OpenStack Image Service"
$ keystone endpoint-create \
  --service-id=$(keystone service-list | awk '/ image / {print $2}') \
  --publicurl=http://controller:9292 \
  --internalurl=http://controller:9292 \
  --adminurl=http://controller:9292
Restart the glance service with its new settings:

# service glance-registry restart
# service glance-api restart



实践部分:
[root@controller ~]# yum search openstack-glance python-glanceclient
[root@controller ~]# openstack-config --set /etc/glance/glance-api.conf database connection \
                     mysql://glance:c088217738b0a8c913f3@controller/glance
[root@controller ~]# openstack-config --set /etc/glance/glance-registry.conf database connection \
                     mysql://glance:c088217738b0a8c913f3@controller/glance
[root@controller ~]# mysql -uroot -p
Enter password: 1428101ae612a0110bb9
MariaDB [(none)]> create DATABASE glance;
MariaDB [(none)]> GRANT ALL PRIVILEGES ON glance.* TO 'glance'@'localhost' IDENTIFIED BY 'c088217738b0a8c913f3';
MariaDB [(none)]> GRANT ALL PRIVILEGES ON glance.* TO 'glance'@'%' IDENTIFIED BY 'c088217738b0a8c913f3';
MariaDB [(none)]> FLUSH PRIVILEGES;
MariaDB [(none)]> quit;
[root@controller ~]# su -s /bin/sh -c "glance-manage db_sync" glance

[root@controller ~]$ source keystonerc_admin
[root@controller ~(keystonerc_admin)]$ keystone user-create --name=glance \
                                         --pass=597a6caadd8ef75a7745 --email=glance@qqvps.com
+----------+----------------------------------+
| Property |              Value               |
+----------+----------------------------------+
|  email   |         glance@qqvps.com         |
| enabled  |               True               |
|    id    | 3080b9cdd589470e95accd0575326a52 |
|   name   |              glance              |
| username |              glance              |
+----------+----------------------------------+
[root@controller ~(keystonerc_admin)]$ keystone user-role-add --user=glance --tenant=service --role=admin

# 使用命令修改配置文件:
openstack-config --set /etc/glance/glance-api.conf keystone_authtoken  auth_uri http://controller:5000
openstack-config --set /etc/glance/glance-api.conf keystone_authtoken  auth_host controller
openstack-config --set /etc/glance/glance-api.conf keystone_authtoken  auth_port 35357
openstack-config --set /etc/glance/glance-api.conf keystone_authtoken  auth_protocol http
openstack-config --set /etc/glance/glance-api.conf keystone_authtoken  admin_tenant_name service
openstack-config --set /etc/glance/glance-api.conf keystone_authtoken  admin_user glance
openstack-config --set /etc/glance/glance-api.conf keystone_authtoken  admin_password 597a6caadd8ef75a7745
openstack-config --set /etc/glance/glance-api.conf paste_deploy   flavor keystone
openstack-config --set /etc/glance/glance-registry.conf keystone_authtoken  auth_uri http://controller:5000
openstack-config --set /etc/glance/glance-registry.conf keystone_authtoken  auth_host controller
openstack-config --set /etc/glance/glance-registry.conf keystone_authtoken  auth_port 35357
openstack-config --set /etc/glance/glance-registry.conf keystone_authtoken  auth_protocol http
openstack-config --set /etc/glance/glance-registry.conf keystone_authtoken  admin_tenant_name service
openstack-config --set /etc/glance/glance-registry.conf keystone_authtoken  admin_user glance
openstack-config --set /etc/glance/glance-registry.conf keystone_authtoken  admin_password 597a6caadd8ef75a7745
openstack-config --set /etc/glance/glance-registry.conf paste_deploy flavor keystone

[root@controller ~(keystonerc_admin)]$ keystone service-create --name=glance --type=image --description="OpenStack Image Service"
+-------------+----------------------------------+
|   Property  |              Value               |
+-------------+----------------------------------+
| description |     OpenStack Image Service      |
|   enabled   |               True               |
|      id     | 1eea502a3be5446fb483db3e163b4e9d |
|     name    |              glance              |
|     type    |              image               |
+-------------+----------------------------------+

[root@controller ~(keystonerc_admin)]$ keystone endpoint-create --service-id=$(keystone service-list | awk '/ image / {print $2}') \
                                                --publicurl=http://controller:9292 --internalurl=http://controller:9292 \
                                                --adminurl=http://controller:9292
+-------------+----------------------------------+
|   Property  |              Value               |
+-------------+----------------------------------+
|   adminurl  |      http://controller:9292      |
|      id     | 1b099644edb2479cbe14460b5a9363b4 |
| internalurl |      http://controller:9292      |
|  publicurl  |      http://controller:9292      |
|    region   |            regionOne             |
|  service_id | 1eea502a3be5446fb483db3e163b4e9d |
+-------------+----------------------------------+
[root@controller ~(keystonerc_admin)]$ iptables -A INPUT -p tcp -m tcp --dport 9292 -j ACCEPT
[root@controller ~(keystonerc_admin)]$ systemctl enable openstack-glance-registry
[root@controller ~(keystonerc_admin)]$ systemctl enable openstack-glance-api
[root@controller ~(keystonerc_admin)]$ systemctl start  openstack-glance-registry
[root@controller ~(keystonerc_admin)]$ systemctl start  openstack-glance-api



################################################ NO.2 验收镜像服务 ##############################################################
Verify the Image Service installation

To test the Image Service installation, download at least one virtual machine image that is known to work with OpenStack. For example, CirrOS is a small test image that is often used for testing OpenStack deployments (CirrOS downloads). This walk through uses the 64-bit CirrOS QCOW2 image.

For more information about how to download and build images, see OpenStack Virtual Machine Image Guide. For information about how to manage images, see the OpenStack User Guide.

Download the image into a dedicated directory using wget or curl:

$ mkdir /tmp/images
$ cd /tmp/images/
$ wget http://download.cirros-cloud.net/0.3.2/cirros-0.3.2-x86_64-disk.img
Upload the image to the Image Service:

$ glance image-create --name=IMAGELABEL --disk-format=FILEFORMAT \
  --container-format=CONTAINERFORMAT --is-public=ACCESSVALUE < IMAGEFILE
Where:

IMAGELABEL
Arbitrary label. The name by which users refer to the image.

FILEFORMAT
Specifies the format of the image file. Valid formats include qcow2, raw, vhd, vmdk, vdi, iso, aki, ari, and ami.

You can verify the format using the file command:

$ file cirros-0.3.2-x86_64-disk.img
cirros-0.3.2-x86_64-disk.img: QEMU QCOW Image (v2), 41126400 bytes
CONTAINERFORMAT
Specifies the container format. Valid formats include: bare, ovf, aki, ari and ami.

Specify bare to indicate that the image file is not in a file format that contains metadata about the virtual machine. Although this field is currently required, it is not actually used by any of the OpenStack services and has no effect on system behavior. Because the value is not used anywhere, it is safe to always specify bare as the container format.

ACCESSVALUE
Specifies image access:

true - All users can view and use the image.

false - Only administrators can view and use the image.

IMAGEFILE
Specifies the name of your downloaded image file.

For example:

$ source admin-openrc.sh
$ glance image-create --name "cirros-0.3.2-x86_64" --disk-format qcow2 \
  --container-format bare --is-public True --progress < cirros-0.3.2-x86_64-disk.img
+------------------+--------------------------------------+
| Property         | Value                                |
+------------------+--------------------------------------+
| checksum         | 64d7c1cd2b6f60c92c14662941cb7913     |
| container_format | bare                                 |
| created_at       | 2014-04-08T18:59:18                  |
| deleted          | False                                |
| deleted_at       | None                                 |
| disk_format      | qcow2                                |
| id               | acafc7c0-40aa-4026-9673-b879898e1fc2 |
| is_public        | True                                 |
| min_disk         | 0                                    |
| min_ram          | 0                                    |
| name             | cirros-0.3.2-x86_64                  |
| owner            | efa984b0a914450e9a47788ad330699d     |
| protected        | False                                |
| size             | 13167616                             |
| status           | active                               |
| updated_at       | 2014-01-08T18:59:18                  |
+------------------+--------------------------------------+
[Note]	Note
Because the returned image ID is generated dynamically, your deployment generates a different ID than the one shown in this example.

Confirm that the image was uploaded and display its attributes:

$ glance image-list
+--------------------------------------+---------------------+-------------+------------------+----------+--------+
| ID                                   | Name                | Disk Format | Container Format | Size     | Status |
+--------------------------------------+---------------------+-------------+------------------+----------+--------+
| acafc7c0-40aa-4026-9673-b879898e1fc2 | cirros-0.3.2-x86_64 | qcow2       | bare             | 13167616 | active |
+--------------------------------------+---------------------+-------------+------------------+----------+--------+
You can now remove the locally downloaded image, since it is stored and available through the Image Service.

$ rm -r /tmp/images
Alternatively, the upload to the Image Service can be done without having to use local disk space to store the file, by use of the --copy-from parameter.

For example:

$ glance image-create --name="cirros-0.3.2-x86_64" --disk-format=qcow2 \
  --container-format=bare --is-public=true \
  --copy-from http://cdn.download.cirros-cloud.net/0.3.2/cirros-0.3.2-x86_64-disk.img
+------------------+--------------------------------------+
| Property         | Value                                |
+------------------+--------------------------------------+
| checksum         | 64d7c1cd2b6f60c92c14662941cb7913     |
| container_format | bare                                 |
| created_at       | 2014-04-08T06:13:18                  |
| deleted          | False                                |
| disk_format      | qcow2                                |
| id               | 3cce1e32-0971-4958-9719-1f92064d4f54 |
| is_public        | True                                 |
| min_disk         | 0                                    |
| min_ram          | 0                                    |
| name             | cirros-0.3.2-x86_64                  |
| owner            | efa984b0a914450e9a47788ad330699d     |
| protected        | False                                |
| size             | 13167616                             |
| status           | active                               |
| updated_at       | 2014-04-08T06:13:20                  |
+------------------+--------------------------------------+



